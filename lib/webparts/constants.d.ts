import * as React from 'react';
export declare const FILTER_CONFIG_DEFAULT: {
    settings: {
        showNot: boolean;
        addRuleLabel: string;
        addSubRuleLabel: string;
        addGroupLabel: string;
        fieldLabel: string;
        notLabel: string;
        fieldPlaceholder: string;
        valueLabel: string;
        valuePlaceholder: string;
        operatorLabel: string;
        funcLabel: string;
        funcPlaceholder: string;
        operatorPlaceholder: string;
        lockLabel: string;
        lockedLabel: string;
        deleteLabel: string;
        addCaseLabel: string;
        addDefaultCaseLabel: string;
        defaultCaseLabel: string;
        delGroupLabel: string;
        fieldSourcesPopupTitle: string;
        valueSourcesPopupTitle: string;
        locale?: {
            moment?: string;
            antd?: Object;
            material?: Object;
            mui?: Object;
        };
        theme?: {
            material?: Object;
            mui?: Object;
        };
        addSubGroupLabel?: string;
        removeRuleConfirmOptions?: {
            title?: string;
            okText?: string;
            okType?: string;
            cancelText?: string;
        };
        removeGroupConfirmOptions?: {
            title?: string;
            okText?: string;
            okType?: string;
            cancelText?: string;
        };
        reverseOperatorsForNot?: boolean;
        canShortMongoQuery?: boolean;
        defaultField?: import("@react-awesome-query-builder/core").AnyFieldValue;
        defaultOperator?: string;
        defaultConjunction?: string;
        fieldSources?: import("@react-awesome-query-builder/core").FieldSource[];
        valueSourcesInfo?: import("@react-awesome-query-builder/core").ValueSourcesInfo;
        canCompareFieldWithField?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").CanCompareFieldWithField;
        canReorder?: boolean;
        canRegroup?: boolean;
        canRegroupCases?: boolean;
        showLock?: boolean;
        canDeleteLocked?: boolean;
        maxNesting?: number;
        setOpOnChangeField: import("@react-awesome-query-builder/core").ChangeFieldStrategy[];
        clearValueOnChangeField?: boolean;
        clearValueOnChangeOp?: boolean;
        canLeaveEmptyGroup?: boolean;
        canLeaveEmptyCase?: boolean;
        shouldCreateEmptyGroup?: boolean;
        forceShowConj?: boolean;
        immutableGroupsMode?: boolean;
        immutableFieldsMode?: boolean;
        immutableOpsMode?: boolean;
        immutableValuesMode?: boolean;
        maxNumberOfRules?: Number;
        maxNumberOfCases?: Number;
        showErrorMessage?: boolean;
        convertableWidgets?: import("@react-awesome-query-builder/core").TypedMap<string[]>;
        exportPreserveGroups?: boolean;
        removeEmptyGroupsOnLoad?: boolean;
        removeEmptyRulesOnLoad?: boolean;
        removeIncompleteRulesOnLoad?: boolean;
        removeInvalidMultiSelectValuesOnLoad?: boolean;
        groupOperators?: string[];
        useConfigCompress?: boolean;
        keepInputOnChangeFieldSrc?: boolean;
        fieldItemKeysForSearch?: import("@react-awesome-query-builder/core").FieldItemSearchableKey[];
        listKeysForSearch?: import("@react-awesome-query-builder/core").ListItemSearchableKey[];
        caseValueField?: import("@react-awesome-query-builder/core").Field;
        fieldSeparator?: string;
        fieldSeparatorDisplay?: string;
        formatReverse?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatReverse;
        sqlFormatReverse?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatReverse;
        spelFormatReverse?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatReverse;
        formatField?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatField;
        formatSpelField?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatSpelField;
        formatAggr?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatAggr;
        renderField?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").FieldProps<import("@react-awesome-query-builder/ui").Config>>;
        renderOperator?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").FieldProps<import("@react-awesome-query-builder/ui").Config>>;
        renderFunc?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").FieldProps<import("@react-awesome-query-builder/ui").Config>>;
        renderConjs?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/core").ConjsProps>;
        renderButton?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").ButtonProps>;
        renderIcon?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").IconProps>;
        renderButtonGroup?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").ButtonGroupProps>;
        renderSwitch?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").SwitchProps>;
        renderProvider?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").ProviderProps>;
        renderValueSources?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").ValueSourcesProps>;
        renderFieldSources?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").ValueSourcesProps>;
        renderConfirm?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/ui").ConfirmFunc;
        useConfirm?: import("@react-awesome-query-builder/core").SerializedFunction | (() => Function);
        renderSize?: "small" | "large" | "medium";
        renderItem?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").ItemBuilderProps>;
        dropdownPlacement?: "topLeft" | "topCenter" | "topRight" | "bottomLeft" | "bottomCenter" | "bottomRight";
        groupActionsPosition?: "topLeft" | "topCenter" | "topRight" | "bottomLeft" | "bottomCenter" | "bottomRight";
        showLabels?: boolean;
        maxLabelsLength?: number;
        customFieldSelectProps?: {
            [x: string]: unknown;
        };
        customOperatorSelectProps?: {
            [x: string]: unknown;
        };
        renderBeforeWidget?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").RuleProps>;
        renderAfterWidget?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").RuleProps>;
        renderBeforeActions?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").RuleProps>;
        renderAfterActions?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").RuleProps>;
        renderBeforeCaseValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").RuleProps>;
        renderAfterCaseValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").RuleProps>;
        renderRuleError?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").RuleErrorProps>;
        renderSwitchPrefix?: string | Object | React.ReactElement<any, string | React.JSXElementConstructor<any>>;
        defaultSliderWidth?: string;
        defaultSelectWidth?: string;
        defaultSearchWidth?: string;
        defaultMaxRows?: number;
    };
    operators: {
        like: {
            label: string;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        not_like: {
            label: string;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        starts_with: {
            label: string;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        ends_with: {
            label: string;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        between: {
            label: string;
            valueLabels: string[];
            textSeparators: string[];
            isSpecialRange?: boolean;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        not_between: {
            label: string;
            valueLabels: string[];
            textSeparators: string[];
            isSpecialRange?: boolean;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        is_empty: {
            label: string;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        is_not_empty: {
            label: string;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        is_null: {
            label: string;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        is_not_null: {
            label: string;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        select_any_in: {
            label: string;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        select_not_any_in: {
            label: string;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        multiselect_contains: {
            label: string;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        multiselect_not_contains: {
            label: string;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        multiselect_equals: {
            label: string;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        multiselect_not_equals: {
            label: string;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        proximity: {
            label: string;
            options: import("@react-awesome-query-builder/core").ProximityOptions<import("@react-awesome-query-builder/ui").Config, import("@react-awesome-query-builder/core").ProximityProps<import("@react-awesome-query-builder/ui").Config>>;
            textSeparators: import("@react-awesome-query-builder/core").RenderedReactElement[];
            valueLabels: (string | {
                label: string;
                placeholder: string;
            })[];
            isSpecialRange?: boolean;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        equal: import("@react-awesome-query-builder/core").BinaryOperator;
        not_equal: import("@react-awesome-query-builder/core").BinaryOperator;
        less: import("@react-awesome-query-builder/core").BinaryOperator;
        less_or_equal: import("@react-awesome-query-builder/core").BinaryOperator;
        greater: import("@react-awesome-query-builder/core").BinaryOperator;
        greater_or_equal: import("@react-awesome-query-builder/core").BinaryOperator;
        select_equals: import("@react-awesome-query-builder/core").BinaryOperator;
        select_not_equals: import("@react-awesome-query-builder/core").BinaryOperator;
    };
    widgets: {
        text: {
            factory: (props: any) => React.JSX.Element;
            labelNo: string;
            labelYes: string;
            valueLabel: string;
            valuePlaceholder: string;
            type: string;
            jsType?: string;
            valueSrc?: import("@react-awesome-query-builder/core").ValueSource;
            fullWidth?: boolean;
            formatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatValue;
            sqlFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatValue;
            spelFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatValue;
            spelImportFuncs?: (string | object)[];
            spelImportValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelImportValue;
            mongoFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatValue;
            elasticSearchFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ElasticSearchFormatValue;
            hideOperator?: boolean;
            operatorInlineLabel?: string;
            jsonLogic?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicFormatValue;
            jsonLogicImport?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicImportValue;
            validateValue?: (import("@react-awesome-query-builder/core").ValidateValue<any> | import("@react-awesome-query-builder/core").SerializedFunction) & (import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ValidateValue<string>);
            customProps?: import("@react-awesome-query-builder/core").AnyObject;
            maxLength?: number;
            maxRows?: number;
        };
        textarea: {
            labelNo: string;
            labelYes: string;
            valueLabel: string;
            valuePlaceholder: string;
            type: string;
            jsType?: string;
            valueSrc?: import("@react-awesome-query-builder/core").ValueSource;
            fullWidth?: boolean;
            formatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatValue;
            sqlFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatValue;
            spelFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatValue;
            spelImportFuncs?: (string | object)[];
            spelImportValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelImportValue;
            mongoFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatValue;
            elasticSearchFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ElasticSearchFormatValue;
            hideOperator?: boolean;
            operatorInlineLabel?: string;
            jsonLogic?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicFormatValue;
            jsonLogicImport?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicImportValue;
            validateValue?: (import("@react-awesome-query-builder/core").ValidateValue<any> | import("@react-awesome-query-builder/core").SerializedFunction) & (import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ValidateValue<string>);
            factory: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/core").TextWidgetProps<import("@react-awesome-query-builder/ui").Config>>;
            customProps?: import("@react-awesome-query-builder/core").AnyObject;
            maxLength?: number;
            maxRows?: number;
        };
        number: {
            labelNo: string;
            labelYes: string;
            valueLabel: string;
            valuePlaceholder: string;
            singleWidget?: string;
            valueLabels?: (string | {
                label: string;
                placeholder: string;
            })[];
            type: string;
            jsType?: string;
            valueSrc?: import("@react-awesome-query-builder/core").ValueSource;
            fullWidth?: boolean;
            formatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatValue;
            sqlFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatValue;
            spelFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatValue;
            spelImportFuncs?: (string | object)[];
            spelImportValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelImportValue;
            mongoFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatValue;
            elasticSearchFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ElasticSearchFormatValue;
            hideOperator?: boolean;
            operatorInlineLabel?: string;
            jsonLogic?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicFormatValue;
            jsonLogicImport?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicImportValue;
            validateValue?: (import("@react-awesome-query-builder/core").ValidateValue<any> | import("@react-awesome-query-builder/core").SerializedFunction) & (import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ValidateValue<number>);
            factory: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/core").NumberWidgetProps<import("@react-awesome-query-builder/ui").Config>>;
            customProps?: import("@react-awesome-query-builder/core").AnyObject;
            min?: number;
            max?: number;
            step?: number;
            marks?: {
                [mark: number]: import("@react-awesome-query-builder/core").RenderedReactElement;
            };
        };
        select: {
            labelNo: string;
            labelYes: string;
            valueLabel: string;
            valuePlaceholder: string;
            type: string;
            jsType?: string;
            valueSrc?: import("@react-awesome-query-builder/core").ValueSource;
            fullWidth?: boolean;
            formatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatValue;
            sqlFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatValue;
            spelFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatValue;
            spelImportFuncs?: (string | object)[];
            spelImportValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelImportValue;
            mongoFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatValue;
            elasticSearchFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ElasticSearchFormatValue;
            hideOperator?: boolean;
            operatorInlineLabel?: string;
            jsonLogic?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicFormatValue;
            jsonLogicImport?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicImportValue;
            validateValue?: (import("@react-awesome-query-builder/core").ValidateValue<any> | import("@react-awesome-query-builder/core").SerializedFunction) & (import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ValidateValue<string | number>);
            factory: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/core").SelectWidgetProps<import("@react-awesome-query-builder/ui").Config>>;
            customProps?: import("@react-awesome-query-builder/core").AnyObject;
            listValues?: import("@react-awesome-query-builder/core").ListValues;
            allowCustomValues?: boolean;
            showSearch?: boolean;
            searchPlaceholder?: string;
            showCheckboxes?: boolean;
            asyncFetch?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").AsyncFetchListValuesFn;
            useLoadMore?: boolean;
            useAsyncSearch?: boolean;
            forceAsyncSearch?: boolean;
        };
        multiselect: {
            labelNo: string;
            labelYes: string;
            valueLabel: string;
            valuePlaceholder: string;
            type: string;
            jsType?: string;
            valueSrc?: import("@react-awesome-query-builder/core").ValueSource;
            fullWidth?: boolean;
            formatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatValue;
            sqlFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatValue;
            spelFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatValue;
            spelImportFuncs?: (string | object)[];
            spelImportValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelImportValue;
            mongoFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatValue;
            elasticSearchFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ElasticSearchFormatValue;
            hideOperator?: boolean;
            operatorInlineLabel?: string;
            jsonLogic?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicFormatValue;
            jsonLogicImport?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicImportValue;
            validateValue?: (import("@react-awesome-query-builder/core").ValidateValue<any> | import("@react-awesome-query-builder/core").SerializedFunction) & (import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ValidateValue<string[] | number[]>);
            factory: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/core").MultiSelectWidgetProps<import("@react-awesome-query-builder/ui").Config>>;
            customProps?: import("@react-awesome-query-builder/core").AnyObject;
            listValues?: import("@react-awesome-query-builder/core").ListValues;
            allowCustomValues?: boolean;
            showSearch?: boolean;
            searchPlaceholder?: string;
            showCheckboxes?: boolean;
            asyncFetch?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").AsyncFetchListValuesFn;
            useLoadMore?: boolean;
            useAsyncSearch?: boolean;
            forceAsyncSearch?: boolean;
        };
        date: {
            labelNo: string;
            labelYes: string;
            valueLabel: string;
            dateFormat: string;
            valuePlaceholder: string;
            valueLabels: {
                label: string;
                placeholder: string;
            }[];
            singleWidget?: string;
            type: string;
            jsType?: string;
            valueSrc?: import("@react-awesome-query-builder/core").ValueSource;
            fullWidth?: boolean;
            formatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatValue;
            sqlFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatValue;
            spelFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatValue;
            spelImportFuncs?: (string | object)[];
            spelImportValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelImportValue;
            mongoFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatValue;
            elasticSearchFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ElasticSearchFormatValue;
            hideOperator?: boolean;
            operatorInlineLabel?: string;
            jsonLogic?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicFormatValue;
            jsonLogicImport?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicImportValue;
            validateValue?: (import("@react-awesome-query-builder/core").ValidateValue<any> | import("@react-awesome-query-builder/core").SerializedFunction) & (import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ValidateValue<string>);
            factory: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/core").DateTimeWidgetProps<import("@react-awesome-query-builder/ui").Config>>;
            customProps?: import("@react-awesome-query-builder/core").AnyObject;
            timeFormat?: string;
            valueFormat?: string;
            use12Hours?: boolean;
            useKeyboard?: boolean;
        };
        time: {
            labelNo: string;
            labelYes: string;
            valueLabel: string;
            valuePlaceholder: string;
            valueLabels: {
                label: string;
                placeholder: string;
            }[];
            singleWidget?: string;
            type: string;
            jsType?: string;
            valueSrc?: import("@react-awesome-query-builder/core").ValueSource;
            fullWidth?: boolean;
            formatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatValue;
            sqlFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatValue;
            spelFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatValue;
            spelImportFuncs?: (string | object)[];
            spelImportValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelImportValue;
            mongoFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatValue;
            elasticSearchFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ElasticSearchFormatValue;
            hideOperator?: boolean;
            operatorInlineLabel?: string;
            jsonLogic?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicFormatValue;
            jsonLogicImport?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicImportValue;
            validateValue?: (import("@react-awesome-query-builder/core").ValidateValue<any> | import("@react-awesome-query-builder/core").SerializedFunction) & (import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ValidateValue<string>);
            factory: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/core").DateTimeWidgetProps<import("@react-awesome-query-builder/ui").Config>>;
            customProps?: import("@react-awesome-query-builder/core").AnyObject;
            timeFormat?: string;
            dateFormat?: string;
            valueFormat?: string;
            use12Hours?: boolean;
            useKeyboard?: boolean;
        };
        datetime: {
            labelNo: string;
            labelYes: string;
            valueLabel: string;
            dateFormat: string;
            timeFormat: string;
            valuePlaceholder: string;
            valueLabels: {
                label: string;
                placeholder: string;
            }[];
            singleWidget?: string;
            type: string;
            jsType?: string;
            valueSrc?: import("@react-awesome-query-builder/core").ValueSource;
            fullWidth?: boolean;
            formatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatValue;
            sqlFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatValue;
            spelFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatValue;
            spelImportFuncs?: (string | object)[];
            spelImportValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelImportValue;
            mongoFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatValue;
            elasticSearchFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ElasticSearchFormatValue;
            hideOperator?: boolean;
            operatorInlineLabel?: string;
            jsonLogic?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicFormatValue;
            jsonLogicImport?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicImportValue;
            validateValue?: (import("@react-awesome-query-builder/core").ValidateValue<any> | import("@react-awesome-query-builder/core").SerializedFunction) & (import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ValidateValue<string>);
            factory: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/core").DateTimeWidgetProps<import("@react-awesome-query-builder/ui").Config>>;
            customProps?: import("@react-awesome-query-builder/core").AnyObject;
            valueFormat?: string;
            use12Hours?: boolean;
            useKeyboard?: boolean;
        };
        boolean: {
            labelNo: string;
            labelYes: string;
            valueLabel: string;
            type: string;
            jsType?: string;
            valueSrc?: import("@react-awesome-query-builder/core").ValueSource;
            valuePlaceholder?: string;
            fullWidth?: boolean;
            formatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatValue;
            sqlFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatValue;
            spelFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatValue;
            spelImportFuncs?: (string | object)[];
            spelImportValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelImportValue;
            mongoFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatValue;
            elasticSearchFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ElasticSearchFormatValue;
            hideOperator?: boolean;
            operatorInlineLabel?: string;
            jsonLogic?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicFormatValue;
            jsonLogicImport?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicImportValue;
            validateValue?: (import("@react-awesome-query-builder/core").ValidateValue<any> | import("@react-awesome-query-builder/core").SerializedFunction) & (import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ValidateValue<boolean>);
            factory: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/core").BooleanWidgetProps<import("@react-awesome-query-builder/ui").Config>>;
            customProps?: import("@react-awesome-query-builder/core").AnyObject;
        };
        slider: import("@react-awesome-query-builder/core").NumberWidget<import("@react-awesome-query-builder/ui").Config, import("@react-awesome-query-builder/core").NumberWidgetProps<import("@react-awesome-query-builder/ui").Config>>;
        rangeslider: import("@react-awesome-query-builder/core").RangeSliderWidget<import("@react-awesome-query-builder/ui").Config, import("@react-awesome-query-builder/core").RangeSliderWidgetProps<import("@react-awesome-query-builder/ui").Config>>;
        treeselect: import("@react-awesome-query-builder/core").TreeSelectWidget<import("@react-awesome-query-builder/ui").Config, import("@react-awesome-query-builder/core").TreeSelectWidgetProps<import("@react-awesome-query-builder/ui").Config>>;
        treemultiselect: import("@react-awesome-query-builder/core").TreeMultiSelectWidget<import("@react-awesome-query-builder/ui").Config, import("@react-awesome-query-builder/core").TreeMultiSelectWidgetProps<import("@react-awesome-query-builder/ui").Config>>;
        field: import("@react-awesome-query-builder/core").FieldWidget<import("@react-awesome-query-builder/ui").Config, import("@react-awesome-query-builder/core").WidgetProps<import("@react-awesome-query-builder/ui").Config>>;
        func: import("@react-awesome-query-builder/core").FuncWidget<import("@react-awesome-query-builder/ui").Config, import("@react-awesome-query-builder/core").WidgetProps<import("@react-awesome-query-builder/ui").Config>>;
        case_value: import("@react-awesome-query-builder/core").CaseValueWidget<import("@react-awesome-query-builder/ui").Config, import("@react-awesome-query-builder/core").CaseValueWidgetProps<import("@react-awesome-query-builder/ui").Config>>;
    };
    conjunctions: {
        AND: {
            label: string;
            formatConj: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatConj;
            sqlFormatConj: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatConj;
            spelFormatConj: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatConj;
            mongoConj: string;
            jsonLogicConj?: string;
            sqlConj?: string;
            spelConj?: string;
            spelConjs?: string[];
            reversedConj?: string;
        };
        OR: {
            label: string;
            formatConj: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatConj;
            sqlFormatConj: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatConj;
            spelFormatConj: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatConj;
            mongoConj: string;
            jsonLogicConj?: string;
            sqlConj?: string;
            spelConj?: string;
            spelConjs?: string[];
            reversedConj?: string;
        };
    };
    types: import("@react-awesome-query-builder/core").CoreTypes;
    ctx: import("@react-awesome-query-builder/core").ConfigContext;
    fields: import("@react-awesome-query-builder/core").Fields;
    funcs?: import("@react-awesome-query-builder/core").Funcs;
};
export declare const FILTER_CONFIG_ADVANCED_SEARCH_DEFAULT: {
    widgets: {
        text: {
            labelNo: string;
            labelYes: string;
            valueLabel: string;
            valuePlaceholder: string;
            type: string;
            jsType?: string;
            valueSrc?: import("@react-awesome-query-builder/core").ValueSource;
            fullWidth?: boolean;
            formatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatValue;
            sqlFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatValue;
            spelFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatValue;
            spelImportFuncs?: (string | object)[];
            spelImportValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelImportValue;
            mongoFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatValue;
            elasticSearchFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ElasticSearchFormatValue;
            hideOperator?: boolean;
            operatorInlineLabel?: string;
            jsonLogic?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicFormatValue;
            jsonLogicImport?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicImportValue;
            validateValue?: (import("@react-awesome-query-builder/core").ValidateValue<any> | import("@react-awesome-query-builder/core").SerializedFunction) & (import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ValidateValue<string>);
            factory: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/core").TextWidgetProps<import("@react-awesome-query-builder/ui").Config>>;
            customProps?: import("@react-awesome-query-builder/core").AnyObject;
            maxLength?: number;
            maxRows?: number;
        };
        textarea: {
            labelNo: string;
            labelYes: string;
            valueLabel: string;
            valuePlaceholder: string;
            type: string;
            jsType?: string;
            valueSrc?: import("@react-awesome-query-builder/core").ValueSource;
            fullWidth?: boolean;
            formatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatValue;
            sqlFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatValue;
            spelFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatValue;
            spelImportFuncs?: (string | object)[];
            spelImportValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelImportValue;
            mongoFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatValue;
            elasticSearchFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ElasticSearchFormatValue;
            hideOperator?: boolean;
            operatorInlineLabel?: string;
            jsonLogic?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicFormatValue;
            jsonLogicImport?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicImportValue;
            validateValue?: (import("@react-awesome-query-builder/core").ValidateValue<any> | import("@react-awesome-query-builder/core").SerializedFunction) & (import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ValidateValue<string>);
            factory: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/core").TextWidgetProps<import("@react-awesome-query-builder/ui").Config>>;
            customProps?: import("@react-awesome-query-builder/core").AnyObject;
            maxLength?: number;
            maxRows?: number;
        };
        number: {
            labelNo: string;
            labelYes: string;
            valueLabel: string;
            valuePlaceholder: string;
            singleWidget?: string;
            valueLabels?: (string | {
                label: string;
                placeholder: string;
            })[];
            type: string;
            jsType?: string;
            valueSrc?: import("@react-awesome-query-builder/core").ValueSource;
            fullWidth?: boolean;
            formatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatValue;
            sqlFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatValue;
            spelFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatValue;
            spelImportFuncs?: (string | object)[];
            spelImportValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelImportValue;
            mongoFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatValue;
            elasticSearchFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ElasticSearchFormatValue;
            hideOperator?: boolean;
            operatorInlineLabel?: string;
            jsonLogic?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicFormatValue;
            jsonLogicImport?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicImportValue;
            validateValue?: (import("@react-awesome-query-builder/core").ValidateValue<any> | import("@react-awesome-query-builder/core").SerializedFunction) & (import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ValidateValue<number>);
            factory: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/core").NumberWidgetProps<import("@react-awesome-query-builder/ui").Config>>;
            customProps?: import("@react-awesome-query-builder/core").AnyObject;
            min?: number;
            max?: number;
            step?: number;
            marks?: {
                [mark: number]: import("@react-awesome-query-builder/core").RenderedReactElement;
            };
        };
        select: {
            labelNo: string;
            labelYes: string;
            valueLabel: string;
            valuePlaceholder: string;
            type: string;
            jsType?: string;
            valueSrc?: import("@react-awesome-query-builder/core").ValueSource;
            fullWidth?: boolean;
            formatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatValue;
            sqlFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatValue;
            spelFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatValue;
            spelImportFuncs?: (string | object)[];
            spelImportValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelImportValue;
            mongoFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatValue;
            elasticSearchFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ElasticSearchFormatValue;
            hideOperator?: boolean;
            operatorInlineLabel?: string;
            jsonLogic?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicFormatValue;
            jsonLogicImport?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicImportValue;
            validateValue?: (import("@react-awesome-query-builder/core").ValidateValue<any> | import("@react-awesome-query-builder/core").SerializedFunction) & (import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ValidateValue<string | number>);
            factory: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/core").SelectWidgetProps<import("@react-awesome-query-builder/ui").Config>>;
            customProps?: import("@react-awesome-query-builder/core").AnyObject;
            listValues?: import("@react-awesome-query-builder/core").ListValues;
            allowCustomValues?: boolean;
            showSearch?: boolean;
            searchPlaceholder?: string;
            showCheckboxes?: boolean;
            asyncFetch?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").AsyncFetchListValuesFn;
            useLoadMore?: boolean;
            useAsyncSearch?: boolean;
            forceAsyncSearch?: boolean;
        };
        multiselect: {
            labelNo: string;
            labelYes: string;
            valueLabel: string;
            valuePlaceholder: string;
            type: string;
            jsType?: string;
            valueSrc?: import("@react-awesome-query-builder/core").ValueSource;
            fullWidth?: boolean;
            formatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatValue;
            sqlFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatValue;
            spelFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatValue;
            spelImportFuncs?: (string | object)[];
            spelImportValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelImportValue;
            mongoFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatValue;
            elasticSearchFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ElasticSearchFormatValue;
            hideOperator?: boolean;
            operatorInlineLabel?: string;
            jsonLogic?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicFormatValue;
            jsonLogicImport?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicImportValue;
            validateValue?: (import("@react-awesome-query-builder/core").ValidateValue<any> | import("@react-awesome-query-builder/core").SerializedFunction) & (import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ValidateValue<string[] | number[]>);
            factory: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/core").MultiSelectWidgetProps<import("@react-awesome-query-builder/ui").Config>>;
            customProps?: import("@react-awesome-query-builder/core").AnyObject;
            listValues?: import("@react-awesome-query-builder/core").ListValues;
            allowCustomValues?: boolean;
            showSearch?: boolean;
            searchPlaceholder?: string;
            showCheckboxes?: boolean;
            asyncFetch?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").AsyncFetchListValuesFn;
            useLoadMore?: boolean;
            useAsyncSearch?: boolean;
            forceAsyncSearch?: boolean;
        };
        date: {
            labelNo: string;
            labelYes: string;
            valueLabel: string;
            dateFormat: string;
            valuePlaceholder: string;
            valueLabels: {
                label: string;
                placeholder: string;
            }[];
            singleWidget?: string;
            type: string;
            jsType?: string;
            valueSrc?: import("@react-awesome-query-builder/core").ValueSource;
            fullWidth?: boolean;
            formatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatValue;
            sqlFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatValue;
            spelFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatValue;
            spelImportFuncs?: (string | object)[];
            spelImportValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelImportValue;
            mongoFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatValue;
            elasticSearchFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ElasticSearchFormatValue;
            hideOperator?: boolean;
            operatorInlineLabel?: string;
            jsonLogic?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicFormatValue;
            jsonLogicImport?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicImportValue;
            validateValue?: (import("@react-awesome-query-builder/core").ValidateValue<any> | import("@react-awesome-query-builder/core").SerializedFunction) & (import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ValidateValue<string>);
            factory: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/core").DateTimeWidgetProps<import("@react-awesome-query-builder/ui").Config>>;
            customProps?: import("@react-awesome-query-builder/core").AnyObject;
            timeFormat?: string;
            valueFormat?: string;
            use12Hours?: boolean;
            useKeyboard?: boolean;
        };
        time: {
            labelNo: string;
            labelYes: string;
            valueLabel: string;
            valuePlaceholder: string;
            valueLabels: {
                label: string;
                placeholder: string;
            }[];
            singleWidget?: string;
            type: string;
            jsType?: string;
            valueSrc?: import("@react-awesome-query-builder/core").ValueSource;
            fullWidth?: boolean;
            formatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatValue;
            sqlFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatValue;
            spelFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatValue;
            spelImportFuncs?: (string | object)[];
            spelImportValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelImportValue;
            mongoFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatValue;
            elasticSearchFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ElasticSearchFormatValue;
            hideOperator?: boolean;
            operatorInlineLabel?: string;
            jsonLogic?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicFormatValue;
            jsonLogicImport?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicImportValue;
            validateValue?: (import("@react-awesome-query-builder/core").ValidateValue<any> | import("@react-awesome-query-builder/core").SerializedFunction) & (import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ValidateValue<string>);
            factory: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/core").DateTimeWidgetProps<import("@react-awesome-query-builder/ui").Config>>;
            customProps?: import("@react-awesome-query-builder/core").AnyObject;
            timeFormat?: string;
            dateFormat?: string;
            valueFormat?: string;
            use12Hours?: boolean;
            useKeyboard?: boolean;
        };
        datetime: {
            labelNo: string;
            labelYes: string;
            valueLabel: string;
            dateFormat: string;
            timeFormat: string;
            valuePlaceholder: string;
            valueLabels: {
                label: string;
                placeholder: string;
            }[];
            singleWidget?: string;
            type: string;
            jsType?: string;
            valueSrc?: import("@react-awesome-query-builder/core").ValueSource;
            fullWidth?: boolean;
            formatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatValue;
            sqlFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatValue;
            spelFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatValue;
            spelImportFuncs?: (string | object)[];
            spelImportValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelImportValue;
            mongoFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatValue;
            elasticSearchFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ElasticSearchFormatValue;
            hideOperator?: boolean;
            operatorInlineLabel?: string;
            jsonLogic?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicFormatValue;
            jsonLogicImport?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicImportValue;
            validateValue?: (import("@react-awesome-query-builder/core").ValidateValue<any> | import("@react-awesome-query-builder/core").SerializedFunction) & (import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ValidateValue<string>);
            factory: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/core").DateTimeWidgetProps<import("@react-awesome-query-builder/ui").Config>>;
            customProps?: import("@react-awesome-query-builder/core").AnyObject;
            valueFormat?: string;
            use12Hours?: boolean;
            useKeyboard?: boolean;
        };
        boolean: {
            labelNo: string;
            labelYes: string;
            valueLabel: string;
            type: string;
            jsType?: string;
            valueSrc?: import("@react-awesome-query-builder/core").ValueSource;
            valuePlaceholder?: string;
            fullWidth?: boolean;
            formatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatValue;
            sqlFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatValue;
            spelFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatValue;
            spelImportFuncs?: (string | object)[];
            spelImportValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelImportValue;
            mongoFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatValue;
            elasticSearchFormatValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ElasticSearchFormatValue;
            hideOperator?: boolean;
            operatorInlineLabel?: string;
            jsonLogic?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicFormatValue;
            jsonLogicImport?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").JsonLogicImportValue;
            validateValue?: (import("@react-awesome-query-builder/core").ValidateValue<any> | import("@react-awesome-query-builder/core").SerializedFunction) & (import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").ValidateValue<boolean>);
            factory: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/core").BooleanWidgetProps<import("@react-awesome-query-builder/ui").Config>>;
            customProps?: import("@react-awesome-query-builder/core").AnyObject;
        };
        slider: import("@react-awesome-query-builder/core").NumberWidget<import("@react-awesome-query-builder/ui").Config, import("@react-awesome-query-builder/core").NumberWidgetProps<import("@react-awesome-query-builder/ui").Config>>;
        rangeslider: import("@react-awesome-query-builder/core").RangeSliderWidget<import("@react-awesome-query-builder/ui").Config, import("@react-awesome-query-builder/core").RangeSliderWidgetProps<import("@react-awesome-query-builder/ui").Config>>;
        treeselect: import("@react-awesome-query-builder/core").TreeSelectWidget<import("@react-awesome-query-builder/ui").Config, import("@react-awesome-query-builder/core").TreeSelectWidgetProps<import("@react-awesome-query-builder/ui").Config>>;
        treemultiselect: import("@react-awesome-query-builder/core").TreeMultiSelectWidget<import("@react-awesome-query-builder/ui").Config, import("@react-awesome-query-builder/core").TreeMultiSelectWidgetProps<import("@react-awesome-query-builder/ui").Config>>;
        field: import("@react-awesome-query-builder/core").FieldWidget<import("@react-awesome-query-builder/ui").Config, import("@react-awesome-query-builder/core").WidgetProps<import("@react-awesome-query-builder/ui").Config>>;
        func: import("@react-awesome-query-builder/core").FuncWidget<import("@react-awesome-query-builder/ui").Config, import("@react-awesome-query-builder/core").WidgetProps<import("@react-awesome-query-builder/ui").Config>>;
        case_value: import("@react-awesome-query-builder/core").CaseValueWidget<import("@react-awesome-query-builder/ui").Config, import("@react-awesome-query-builder/core").CaseValueWidgetProps<import("@react-awesome-query-builder/ui").Config>>;
    };
    settings: {
        showNot: boolean;
        addRuleLabel: string;
        addSubRuleLabel: string;
        addGroupLabel: string;
        fieldLabel: string;
        notLabel: string;
        fieldPlaceholder: string;
        valueLabel: string;
        valuePlaceholder: string;
        operatorLabel: string;
        funcLabel: string;
        funcPlaceholder: string;
        operatorPlaceholder: string;
        lockLabel: string;
        lockedLabel: string;
        deleteLabel: string;
        addCaseLabel: string;
        addDefaultCaseLabel: string;
        defaultCaseLabel: string;
        delGroupLabel: string;
        fieldSourcesPopupTitle: string;
        valueSourcesPopupTitle: string;
        locale?: {
            moment?: string;
            antd?: Object;
            material?: Object;
            mui?: Object;
        };
        theme?: {
            material?: Object;
            mui?: Object;
        };
        addSubGroupLabel?: string;
        removeRuleConfirmOptions?: {
            title?: string;
            okText?: string;
            okType?: string;
            cancelText?: string;
        };
        removeGroupConfirmOptions?: {
            title?: string;
            okText?: string;
            okType?: string;
            cancelText?: string;
        };
        reverseOperatorsForNot?: boolean;
        canShortMongoQuery?: boolean;
        defaultField?: import("@react-awesome-query-builder/core").AnyFieldValue;
        defaultOperator?: string;
        defaultConjunction?: string;
        fieldSources?: import("@react-awesome-query-builder/core").FieldSource[];
        valueSourcesInfo?: import("@react-awesome-query-builder/core").ValueSourcesInfo;
        canCompareFieldWithField?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").CanCompareFieldWithField;
        canReorder?: boolean;
        canRegroup?: boolean;
        canRegroupCases?: boolean;
        showLock?: boolean;
        canDeleteLocked?: boolean;
        maxNesting?: number;
        setOpOnChangeField: import("@react-awesome-query-builder/core").ChangeFieldStrategy[];
        clearValueOnChangeField?: boolean;
        clearValueOnChangeOp?: boolean;
        canLeaveEmptyGroup?: boolean;
        canLeaveEmptyCase?: boolean;
        shouldCreateEmptyGroup?: boolean;
        forceShowConj?: boolean;
        immutableGroupsMode?: boolean;
        immutableFieldsMode?: boolean;
        immutableOpsMode?: boolean;
        immutableValuesMode?: boolean;
        maxNumberOfRules?: Number;
        maxNumberOfCases?: Number;
        showErrorMessage?: boolean;
        convertableWidgets?: import("@react-awesome-query-builder/core").TypedMap<string[]>;
        exportPreserveGroups?: boolean;
        removeEmptyGroupsOnLoad?: boolean;
        removeEmptyRulesOnLoad?: boolean;
        removeIncompleteRulesOnLoad?: boolean;
        removeInvalidMultiSelectValuesOnLoad?: boolean;
        groupOperators?: string[];
        useConfigCompress?: boolean;
        keepInputOnChangeFieldSrc?: boolean;
        fieldItemKeysForSearch?: import("@react-awesome-query-builder/core").FieldItemSearchableKey[];
        listKeysForSearch?: import("@react-awesome-query-builder/core").ListItemSearchableKey[];
        caseValueField?: import("@react-awesome-query-builder/core").Field;
        fieldSeparator?: string;
        fieldSeparatorDisplay?: string;
        formatReverse?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatReverse;
        sqlFormatReverse?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatReverse;
        spelFormatReverse?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatReverse;
        formatField?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatField;
        formatSpelField?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatSpelField;
        formatAggr?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatAggr;
        renderField?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").FieldProps<import("@react-awesome-query-builder/ui").Config>>;
        renderOperator?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").FieldProps<import("@react-awesome-query-builder/ui").Config>>;
        renderFunc?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").FieldProps<import("@react-awesome-query-builder/ui").Config>>;
        renderConjs?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/core").ConjsProps>;
        renderButton?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").ButtonProps>;
        renderIcon?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").IconProps>;
        renderButtonGroup?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").ButtonGroupProps>;
        renderSwitch?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").SwitchProps>;
        renderProvider?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").ProviderProps>;
        renderValueSources?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").ValueSourcesProps>;
        renderFieldSources?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").ValueSourcesProps>;
        renderConfirm?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/ui").ConfirmFunc;
        useConfirm?: import("@react-awesome-query-builder/core").SerializedFunction | (() => Function);
        renderSize?: "small" | "large" | "medium";
        renderItem?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").ItemBuilderProps>;
        dropdownPlacement?: "topLeft" | "topCenter" | "topRight" | "bottomLeft" | "bottomCenter" | "bottomRight";
        groupActionsPosition?: "topLeft" | "topCenter" | "topRight" | "bottomLeft" | "bottomCenter" | "bottomRight";
        showLabels?: boolean;
        maxLabelsLength?: number;
        customFieldSelectProps?: {
            [x: string]: unknown;
        };
        customOperatorSelectProps?: {
            [x: string]: unknown;
        };
        renderBeforeWidget?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").RuleProps>;
        renderAfterWidget?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").RuleProps>;
        renderBeforeActions?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").RuleProps>;
        renderAfterActions?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").RuleProps>;
        renderBeforeCaseValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").RuleProps>;
        renderAfterCaseValue?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").RuleProps>;
        renderRuleError?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FactoryWithContext<import("@react-awesome-query-builder/ui").RuleErrorProps>;
        renderSwitchPrefix?: string | Object | React.ReactElement<any, string | React.JSXElementConstructor<any>>;
        defaultSliderWidth?: string;
        defaultSelectWidth?: string;
        defaultSearchWidth?: string;
        defaultMaxRows?: number;
    };
    operators: {
        like: {
            label: string;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        not_like: {
            label: string;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        starts_with: {
            label: string;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        ends_with: {
            label: string;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        between: {
            label: string;
            valueLabels: string[];
            textSeparators: string[];
            isSpecialRange?: boolean;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        not_between: {
            label: string;
            valueLabels: string[];
            textSeparators: string[];
            isSpecialRange?: boolean;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        is_empty: {
            label: string;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        is_not_empty: {
            label: string;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        is_null: {
            label: string;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        is_not_null: {
            label: string;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        select_any_in: {
            label: string;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        select_not_any_in: {
            label: string;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        multiselect_contains: {
            label: string;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        multiselect_not_contains: {
            label: string;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        multiselect_equals: {
            label: string;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        multiselect_not_equals: {
            label: string;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        proximity: {
            label: string;
            options: import("@react-awesome-query-builder/core").ProximityOptions<import("@react-awesome-query-builder/ui").Config, import("@react-awesome-query-builder/core").ProximityProps<import("@react-awesome-query-builder/ui").Config>>;
            textSeparators: import("@react-awesome-query-builder/core").RenderedReactElement[];
            valueLabels: (string | {
                label: string;
                placeholder: string;
            })[];
            isSpecialRange?: boolean;
            reversedOp?: string;
            isNotOp?: boolean;
            cardinality?: number;
            formatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatOperator;
            labelForFormat?: string;
            mongoFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").MongoFormatOperator;
            sqlOp?: string;
            sqlFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatOperator;
            spelOp?: string;
            spelOps?: string[];
            spelFormatOp?: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatOperator;
            jsonLogic?: string | Object | import("@react-awesome-query-builder/core").JsonLogicFormatOperator;
            jsonLogic2?: string;
            _jsonLogicIsExclamationOp?: boolean;
            elasticSearchQueryType?: string | Object | import("@react-awesome-query-builder/core").ElasticSearchFormatQueryType;
            valueSources?: import("@react-awesome-query-builder/core").ValueSource[];
            valueTypes?: string[];
        };
        equal: import("@react-awesome-query-builder/core").BinaryOperator;
        not_equal: import("@react-awesome-query-builder/core").BinaryOperator;
        less: import("@react-awesome-query-builder/core").BinaryOperator;
        less_or_equal: import("@react-awesome-query-builder/core").BinaryOperator;
        greater: import("@react-awesome-query-builder/core").BinaryOperator;
        greater_or_equal: import("@react-awesome-query-builder/core").BinaryOperator;
        select_equals: import("@react-awesome-query-builder/core").BinaryOperator;
        select_not_equals: import("@react-awesome-query-builder/core").BinaryOperator;
    };
    conjunctions: {
        AND: {
            label: string;
            formatConj: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatConj;
            sqlFormatConj: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatConj;
            spelFormatConj: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatConj;
            mongoConj: string;
            jsonLogicConj?: string;
            sqlConj?: string;
            spelConj?: string;
            spelConjs?: string[];
            reversedConj?: string;
        };
        OR: {
            label: string;
            formatConj: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").FormatConj;
            sqlFormatConj: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SqlFormatConj;
            spelFormatConj: import("@react-awesome-query-builder/core").SerializedFunction | import("@react-awesome-query-builder/core").SpelFormatConj;
            mongoConj: string;
            jsonLogicConj?: string;
            sqlConj?: string;
            spelConj?: string;
            spelConjs?: string[];
            reversedConj?: string;
        };
    };
    types: import("@react-awesome-query-builder/core").CoreTypes;
    ctx: import("@react-awesome-query-builder/core").ConfigContext;
    fields: import("@react-awesome-query-builder/core").Fields;
    funcs?: import("@react-awesome-query-builder/core").Funcs;
};
//# sourceMappingURL=constants.d.ts.map